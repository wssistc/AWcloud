"use strict";
export default function routeConfig($routeProvider,$locationProvider){
  $routeProvider
    .when("/",{
      templateUrl:"tmpl/test.html",
      controller:"vmware.systemCtrl",
      current:"systemview"
    })
    .when("/datacenter",{
      templateUrl:"tmpl/dataCenterTmpl.html",
      controller: "dataCenterCtrl",
      current:"datacenter"
    })
    .when("/datacenter/overview",{
      templateUrl:"tmpl/dataCenter.overview.html",
      controller:"DCOverviewCtrl",
      current:"datacenter.overview"
    })
    .when("/datacenter/objects/cluster",{
      templateUrl:"tmpl/clusterTmpl.html",
      controller:"dcClusterCtrl",
      current:"datacenter.objects.cluster"
    })
    .when("/datacenter/objects/host",{
      templateUrl:"tmpl/hostTmpl.html",
      controller:"dcHostCtrl",
      current:"datacenter.objects.host"
    })
    .when("/datacenter/objects/vm",{
      templateUrl:"tmpl/virtualmachine.html",
      controller:"vmCtrl",
      current:"datacenter.objects.vm"
    })
    .when("/datacenter/objects/vmtmpl",{
      templateUrl:"tmpl/vmtmpl.html",
      controller:"DCVMTmplCtrl",
      current:"datacenter.objects.vmtmpl"
    })
    .when("/datacenter/objects/datastore",{
      templateUrl:"tmpl/datastore.html",
      controller:"DCDataStoreCtrl",
      current:"datacenter.objects.datastore"
    })
    .when("/datacenter/objects/vmnetwork",{
      templateUrl:"tmpl/network.html",
      controlle:"DCVMnetworkCtrl",
      current:"datacenter.objects.vmnetwork"
    })
    .when("/host",{
      templateUrl:"tmpl/hostTmpl.html",
      controller:"hostCtrl",
      current:"host"
    })
    .when("/host/createhost",{
      templateUrl:"tmpl/hostCreate.html",
      controller:"hostCtrl",
      current:"host.createhost"
    })
    .when("/host/overview",{
      templateUrl:"tmpl/host.overview.html",
      controller:"hostOverviewCtrl",
      current:"host.overview"
    })
    .when("/host/objects/vm",{
      templateUrl:"tmpl/virtualmachine.html",
      controller:"vmCtrl",
      current:"host.objects.vm"
    })
    .when("/host/objects/vmtmpl",{
      templateUrl:"tmpl/vmtmpl.html",
      controller:"DCVMTmplCtrl",
      current:"host.objects.vmtmpl"
    })
    .when("/host/objects/datastore",{
      templateUrl:"tmpl/datastore.html",
      controller:"DCDataStoreCtrl",
      current:"host.objects.datastore"
    })
    .when("/host/objects/vmnetwork",{
      templateUrl:"tmpl/network.html",
      controlle:"DCVMnetworkCtrl",
      current:"host.objects.vmnetwork"
    })
    .when("/cluster",{
      templateUrl:"tmpl/clusterTmpl.html",
      controller:"clusterCtrl",
      current:"cluster"
    })
    .when("/cluster/createcluster",{
      templateUrl:"tmpl/clusterCreate.html",
      controller:"clusterCtrl",
      current:"cluster.createcluster"
    })
    .when("/cluster/overview",{
      templateUrl:"tmpl/cluster.overview.html",
      controller:"clusterOverviewCtrl",
      current:"cluster.overview"
    })
    .when("/cluster/objects/host",{
      templateUrl:"tmpl/hostTmpl.html",
      controller:"clusterHostCtrl",
      current:"cluster.objects.host"
    })
    .when("/cluster/objects/vm",{
      templateUrl:"tmpl/virtualmachine.html",
      controller:"vmCtrl",
      current:"cluster.objects.vm"
    })
    .when("/cluster/objects/datastore",{
      templateUrl:"tmpl/datastore.html",
      controller:"DCDataStoreCtrl",
      current:"cluster.objects.datastore"
    })
    .when("/cluster/objects/vmnetwork",{
      templateUrl:"tmpl/network.html",
      controlle:"DCVMnetworkCtrl",
      current:"cluster.objects.vmnetwork"
    })
    .when("/virtualmachine",{
      templateUrl:"tmpl/virtualmachine/virtualmachine.html",
      controller:"vmCtrl",
      current:"virtualmachine"
    })
    .when("/virtualmachine/overview",{
      templateUrl:"tmpl/virtualmachine/overview.html",
      controller:"vmOverviewCtrl",
      current:"virtualmachine.overview"
    })
    .when("/virtualmachine/createvm",{
      templateUrl:"tmpl/virtualmachine/createvm.html",
      controller:"createVmCtrl",
      current:"virtualmachine.createvm"
    })
    .when("/virtualmachine/objects/snapshots",{
      templateUrl:"tmpl/virtualmachine/virtualmachine.objects.snapshots.html",
      controller:"vmDetailCtrl",
      current:"virtualmachine.objects.snapshots"
    })
    .otherwise({ redirectTo: "/datacenter" });
}
routeConfig.$inject = ["$routeProvider","$locationProvider"];
